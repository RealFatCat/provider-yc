apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  name: clusters.kubernetes.yc.yandex-team.ru
spec:
  group: kubernetes.yc.yandex-team.ru
  names:
    categories:
    - crossplane
    - managed
    - yc
    kind: Cluster
    listKind: ClusterList
    plural: clusters
    singular: cluster
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.atProvider.status
      name: STATUS
      type: string
    - jsonPath: .status.atProvider.health
      name: HEALTH
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: An Cluster is an API type for YC Kubernetes Cluster provider
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: An ClusterSpec defines the desired state of a Cluster.
            properties:
              deletionPolicy:
                description: DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource. The "Delete" policy is the default when no policy is specified.
                enum:
                - Orphan
                - Delete
                type: string
              description:
                description: Description of the instance.
                type: string
              folderId:
                description: ID of the folder to create an instance in. To get the folder ID, use a [yandex.cloud.resourcemanager.v1.FolderService.List] request.
                type: string
              internetGateway:
                description: "Types that are assignable to InternetGateway: \t*CreateClusterRequest_GatewayIpv4Address For no there is only one implementation of gateway"
                properties:
                  gatewayIpv4Address:
                    description: Gateway IPv4 address.
                    type: string
                required:
                - gatewayIpv4Address
                type: object
              ipAllocationPolicy:
                description: IP allocation policy of the Kubernetes cluster.
                properties:
                  clusterIpv4CidrBlock:
                    description: "CIDR block. IP range for allocating pod addresses. \n It should not overlap with any subnet in the network the Kubernetes cluster located in. Static routes will be set up for this CIDR blocks in node subnets."
                    type: string
                  clusterIpv6CidrBlock:
                    description: IPv6 range for allocating pod IP addresses.
                    type: string
                  nodeIpv4CidrMaskSize:
                    description: "Size of the masks that are assigned for each node in the cluster. \n If not specified, 24 is used."
                    format: int64
                    type: integer
                  serviceIpv4CidrBlock:
                    description: "CIDR block. IP range Kubernetes service Kubernetes cluster IP addresses will be allocated from. \n It should not overlap with any subnet in the network the Kubernetes cluster located in."
                    type: string
                  serviceIpv6CidrBlock:
                    description: IPv6 range for allocating Kubernetes service IP addresses
                    type: string
                type: object
              kmsProvider:
                description: KMS provider configuration.
                properties:
                  keyId:
                    description: KMS key ID for secrets encryption. To obtain a KMS key ID use a [yandex.cloud.kms.v1.SymmetricKeyService.List] request.
                    type: string
                required:
                - keyId
                type: object
              labels:
                additionalProperties:
                  type: string
                description: Resource labels as `key:value` pairs.
                type: object
              masterSpec:
                description: IP allocation policy of the Kubernetes cluster.
                properties:
                  maintenancePolicy:
                    description: Maintenance policy of the master.
                    properties:
                      autoUpgrade:
                        description: If set to true, automatic updates are installed in the specified period of time with no interaction from the user. If set to false, automatic upgrades are disabled.
                        type: boolean
                      maintenanceWindow:
                        description: Maintenance window settings. Update will start at the specified time and last no more than the specified duration. The time is set in UTC.
                        properties:
                          policy:
                            description: "Maintenance policy. \n Types that are assignable to Policy: \t*MaintenanceWindow_Anytime \t*MaintenanceWindow_DailyMaintenanceWindow \t*MaintenanceWindow_WeeklyMaintenanceWindow"
                            properties:
                              anytime:
                                description: Updating the master at any time.
                                type: object
                              dailyMaintenanceWindow:
                                description: Updating the master on any day during the specified time window.
                                properties:
                                  duration:
                                    description: Window duration.
                                    properties:
                                      nanos:
                                        description: Signed fractions of a second at nanosecond resolution of the span of time. Durations less than one second are represented with a 0 `seconds` field and a positive or negative `nanos` field. For durations of one second or more, a non-zero value for the `nanos` field must be of the same sign as the `seconds` field. Must be from -999,999,999 to +999,999,999 inclusive.
                                        format: int32
                                        type: integer
                                      seconds:
                                        description: 'Signed seconds of the span of time. Must be from -315,576,000,000 to +315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years'
                                        format: int64
                                        maximum: 86400
                                        minimum: 3600
                                        type: integer
                                    type: object
                                  startTime:
                                    description: Window start time, in the UTC timezone.
                                    properties:
                                      hours:
                                        description: Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value "24:00:00" for scenarios like business closing time.
                                        format: int32
                                        type: integer
                                      minutes:
                                        description: Minutes of hour of day. Must be from 0 to 59.
                                        format: int32
                                        type: integer
                                      nanos:
                                        description: Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
                                        format: int32
                                        type: integer
                                      seconds:
                                        description: Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.
                                        format: int32
                                        type: integer
                                    type: object
                                type: object
                              weeklyMaintenanceWindow:
                                description: Updating the master on selected days during the specified time window.
                                properties:
                                  daysOfWeek:
                                    description: Days of the week and the maintenance window for these days when automatic updates are allowed.
                                    items:
                                      properties:
                                        days:
                                          description: Days of the week when automatic updates are allowed.
                                          items:
                                            type: string
                                          type: array
                                        duration:
                                          description: Window duration.
                                          properties:
                                            nanos:
                                              description: Signed fractions of a second at nanosecond resolution of the span of time. Durations less than one second are represented with a 0 `seconds` field and a positive or negative `nanos` field. For durations of one second or more, a non-zero value for the `nanos` field must be of the same sign as the `seconds` field. Must be from -999,999,999 to +999,999,999 inclusive.
                                              format: int32
                                              type: integer
                                            seconds:
                                              description: 'Signed seconds of the span of time. Must be from -315,576,000,000 to +315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years'
                                              format: int64
                                              maximum: 86400
                                              minimum: 3600
                                              type: integer
                                          type: object
                                        startTime:
                                          description: Window start time, in the UTC timezone.
                                          properties:
                                            hours:
                                              description: Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value "24:00:00" for scenarios like business closing time.
                                              format: int32
                                              type: integer
                                            minutes:
                                              description: Minutes of hour of day. Must be from 0 to 59.
                                              format: int32
                                              type: integer
                                            nanos:
                                              description: Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
                                              format: int32
                                              type: integer
                                            seconds:
                                              description: Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.
                                              format: int32
                                              type: integer
                                          type: object
                                      type: object
                                    type: array
                                type: object
                            type: object
                        type: object
                    type: object
                  masterType:
                    description: "Types that are assignable to MasterType: \t*MasterSpec_ZonalMasterSpec \t*MasterSpec_RegionalMasterSpec"
                    properties:
                      regionalMasterSpec:
                        properties:
                          externalV4AddressSpec:
                            description: Specify to allocate a static public IP for the master.
                            type: object
                          locations:
                            description: List of locations where the master will be allocated.
                            items:
                              properties:
                                internalV4AddressSpec:
                                  description: If not specified and there is a single subnet in specified zone, address in this subnet will be allocated.
                                  properties:
                                    subnetId:
                                      description: ID of the subnet. If no ID is specified, and there only one subnet in specified zone, an address in this subnet will be allocated.
                                      type: string
                                    subnetIdRef:
                                      description: A Reference to a named object.
                                      properties:
                                        name:
                                          description: Name of the referenced object.
                                          type: string
                                      required:
                                      - name
                                      type: object
                                    subnetIdSelector:
                                      description: A Selector selects an object.
                                      properties:
                                        matchControllerRef:
                                          description: MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
                                          type: boolean
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: MatchLabels ensures an object with matching labels is selected.
                                          type: object
                                      type: object
                                  type: object
                                zoneId:
                                  description: ID of the availability zone.
                                  type: string
                              type: object
                            type: array
                          regionId:
                            description: ID of the availability zone where the master resides.
                            type: string
                        type: object
                      zonalMasterSpec:
                        properties:
                          externalV4AddressSpec:
                            description: Specification of parameters for external IPv4 networking.
                            type: object
                          internalV4addressSpec:
                            description: Specification of parameters for internal IPv4 networking.
                            properties:
                              subnetId:
                                description: ID of the subnet. If no ID is specified, and there only one subnet in specified zone, an address in this subnet will be allocated.
                                type: string
                              subnetIdRef:
                                description: A Reference to a named object.
                                properties:
                                  name:
                                    description: Name of the referenced object.
                                    type: string
                                required:
                                - name
                                type: object
                              subnetIdSelector:
                                description: A Selector selects an object.
                                properties:
                                  matchControllerRef:
                                    description: MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
                                    type: boolean
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: MatchLabels ensures an object with matching labels is selected.
                                    type: object
                                type: object
                            type: object
                          zoneId:
                            description: ID of the availability zone.
                            type: string
                        type: object
                    type: object
                  securityGroupIds:
                    description: Master security groups.
                    items:
                      type: string
                    type: array
                  version:
                    description: Version of Kubernetes components that runs on the master.
                    type: string
                required:
                - masterType
                - version
                type: object
              networkId:
                description: Name of the network.
                type: string
              networkIdRef:
                description: A Reference to a named object.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              networkIdSelector:
                description: A Selector selects an object.
                properties:
                  matchControllerRef:
                    description: MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
                    type: boolean
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: MatchLabels ensures an object with matching labels is selected.
                    type: object
                type: object
              networkImplementation:
                description: "Types that are assignable to NetworkImplementation: \t*CreateClusterRequest_Cilium For now there is only one implementation"
                properties:
                  cilium:
                    properties:
                      routingMode:
                        type: string
                    required:
                    - routingMode
                    type: object
                required:
                - cilium
                type: object
              networkPolicy:
                properties:
                  provider:
                    type: string
                type: object
              nodeServiceAccountName:
                description: Service account to be used by the worker nodes of the Kubernetes cluster to access Container Registry or to push node logs and metrics.
                type: string
              providerConfigRef:
                description: ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              releaseChannel:
                description: Release channel for the master.
                type: string
              serviceAccountName:
                description: Service account to be used for provisioning Compute Cloud and VPC resources for Kubernetes cluster. Selected service account should have `edit` role on the folder where the Kubernetes cluster will be located and on the folder where selected network resides.
                type: string
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
              zoneId:
                description: ID of the availability zone where the instance resides. To get a list of available zones, use the [yandex.cloud.compute.v1.ZoneService.List] request
                type: string
            required:
            - folderId
            - masterSpec
            - nodeServiceAccountName
            - releaseChannel
            - serviceAccountName
            type: object
          status:
            description: An ClusterStatus represents the observed state of a Cluster.
            properties:
              atProvider:
                description: ClusterObservation are the observable fields of a Cluster.
                properties:
                  ID:
                    type: string
                  createdAt:
                    type: string
                  description:
                    type: string
                  folderId:
                    type: string
                  health:
                    type: string
                  internetGateway:
                    properties:
                      gatewayIpv4Address:
                        description: Gateway IPv4 address.
                        type: string
                    required:
                    - gatewayIpv4Address
                    type: object
                  labels:
                    additionalProperties:
                      type: string
                    type: object
                  master:
                    properties:
                      maintenancePolicy:
                        description: 'Endpoints of the master. Endpoints constitute of scheme and port (i.e. `https://ip-address:port`) and can be used by the clients to communicate with the Kubernetes API of the Kubernetes cluster. TODO: if needed Endpoints *MasterEndpoints `protobuf:"bytes,3,opt,name=endpoints,proto3" json:"endpoints,omitempty"` Master authentication parameters are used to establish trust between the master and a client. TODO: if needed MasterAuth *MasterAuth `protobuf:"bytes,4,opt,name=master_auth,json=masterAuth,proto3" json:"master_auth,omitempty"` Detailed information about the Kubernetes version that is running on the master. TODO: if needed VersionInfo *VersionInfo `protobuf:"bytes,5,opt,name=version_info,json=versionInfo,proto3" json:"version_info,omitempty"` Maintenance policy of the master.'
                        properties:
                          autoUpgrade:
                            description: If set to true, automatic updates are installed in the specified period of time with no interaction from the user. If set to false, automatic upgrades are disabled.
                            type: boolean
                          maintenanceWindow:
                            description: Maintenance window settings. Update will start at the specified time and last no more than the specified duration. The time is set in UTC.
                            properties:
                              policy:
                                description: "Maintenance policy. \n Types that are assignable to Policy: \t*MaintenanceWindow_Anytime \t*MaintenanceWindow_DailyMaintenanceWindow \t*MaintenanceWindow_WeeklyMaintenanceWindow"
                                properties:
                                  anytime:
                                    description: Updating the master at any time.
                                    type: object
                                  dailyMaintenanceWindow:
                                    description: Updating the master on any day during the specified time window.
                                    properties:
                                      duration:
                                        description: Window duration.
                                        properties:
                                          nanos:
                                            description: Signed fractions of a second at nanosecond resolution of the span of time. Durations less than one second are represented with a 0 `seconds` field and a positive or negative `nanos` field. For durations of one second or more, a non-zero value for the `nanos` field must be of the same sign as the `seconds` field. Must be from -999,999,999 to +999,999,999 inclusive.
                                            format: int32
                                            type: integer
                                          seconds:
                                            description: 'Signed seconds of the span of time. Must be from -315,576,000,000 to +315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years'
                                            format: int64
                                            maximum: 86400
                                            minimum: 3600
                                            type: integer
                                        type: object
                                      startTime:
                                        description: Window start time, in the UTC timezone.
                                        properties:
                                          hours:
                                            description: Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value "24:00:00" for scenarios like business closing time.
                                            format: int32
                                            type: integer
                                          minutes:
                                            description: Minutes of hour of day. Must be from 0 to 59.
                                            format: int32
                                            type: integer
                                          nanos:
                                            description: Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
                                            format: int32
                                            type: integer
                                          seconds:
                                            description: Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.
                                            format: int32
                                            type: integer
                                        type: object
                                    type: object
                                  weeklyMaintenanceWindow:
                                    description: Updating the master on selected days during the specified time window.
                                    properties:
                                      daysOfWeek:
                                        description: Days of the week and the maintenance window for these days when automatic updates are allowed.
                                        items:
                                          properties:
                                            days:
                                              description: Days of the week when automatic updates are allowed.
                                              items:
                                                type: string
                                              type: array
                                            duration:
                                              description: Window duration.
                                              properties:
                                                nanos:
                                                  description: Signed fractions of a second at nanosecond resolution of the span of time. Durations less than one second are represented with a 0 `seconds` field and a positive or negative `nanos` field. For durations of one second or more, a non-zero value for the `nanos` field must be of the same sign as the `seconds` field. Must be from -999,999,999 to +999,999,999 inclusive.
                                                  format: int32
                                                  type: integer
                                                seconds:
                                                  description: 'Signed seconds of the span of time. Must be from -315,576,000,000 to +315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years'
                                                  format: int64
                                                  maximum: 86400
                                                  minimum: 3600
                                                  type: integer
                                              type: object
                                            startTime:
                                              description: Window start time, in the UTC timezone.
                                              properties:
                                                hours:
                                                  description: Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value "24:00:00" for scenarios like business closing time.
                                                  format: int32
                                                  type: integer
                                                minutes:
                                                  description: Minutes of hour of day. Must be from 0 to 59.
                                                  format: int32
                                                  type: integer
                                                nanos:
                                                  description: Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
                                                  format: int32
                                                  type: integer
                                                seconds:
                                                  description: Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.
                                                  format: int32
                                                  type: integer
                                              type: object
                                          type: object
                                        type: array
                                    type: object
                                type: object
                            type: object
                        type: object
                      masterType:
                        properties:
                          regionalMaster:
                            properties:
                              externalV4Address:
                                description: IPv4 external network address that is assigned to the master.
                                type: string
                              internalV4Address:
                                description: IPv4 internal network address that is assigned to the master.
                                type: string
                              regionId:
                                description: ID of the region where the master resides.
                                type: string
                            type: object
                          zonalMaster:
                            description: Parameters of the availability zone for the master.
                            properties:
                              externalV4Address:
                                description: IPv4 external network address that is assigned to the master.
                                type: string
                              internalV4Address:
                                description: IPv4 internal network address that is assigned to the master.
                                type: string
                              zoneId:
                                description: ID of the availability zone where the master resides.
                                type: string
                            type: object
                        type: object
                      securityGroupIds:
                        description: Master security groups.
                        items:
                          type: string
                        type: array
                      version:
                        description: Version of Kubernetes components that runs on the master.
                        type: string
                    required:
                    - masterType
                    type: object
                  name:
                    type: string
                  networkPolicy:
                    properties:
                      provider:
                        type: string
                    type: object
                  nodeService_account_id:
                    type: string
                  serviceAccount_id:
                    type: string
                  status:
                    type: string
                required:
                - ID
                - createdAt
                - folderId
                - name
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True, False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
