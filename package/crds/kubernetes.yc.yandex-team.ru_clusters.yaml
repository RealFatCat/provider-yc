apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  name: clusters.kubernetes.yc.yandex-team.ru
spec:
  group: kubernetes.yc.yandex-team.ru
  names:
    categories:
    - crossplane
    - managed
    - yc
    kind: Cluster
    listKind: ClusterList
    plural: clusters
    singular: cluster
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.atProvider.name
      name: YC_NAME
      type: string
    - jsonPath: .status.atProvider.status
      name: STATUS
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: An Cluster is an API type for YC Kubernetes Cluster provider
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: An ClusterSpec defines the desired state of a Cluster.
            properties:
              deletionPolicy:
                description: DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource. The "Delete" policy is the default when no policy is specified.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: ClusterParameters are the configurable fields of a Cluster.
                properties:
                  description:
                    description: Description of the instance.
                    type: string
                  folder_id:
                    description: ID of the folder to create an instance in. To get the folder ID, use a [yandex.cloud.resourcemanager.v1.FolderService.List] request.
                    type: string
                  internet_gateway:
                    description: "Types that are assignable to InternetGateway: \t*CreateClusterRequest_GatewayIpv4Address For no there is only one implementation of gateway"
                    properties:
                      gateway_ipv4_address:
                        description: Gateway IPv4 address.
                        type: string
                    type: object
                  ip_allocation_policy:
                    description: IP allocation policy of the Kubernetes cluster.
                    properties:
                      cluster_ipv4_cidr_block:
                        description: "CIDR block. IP range for allocating pod addresses. \n It should not overlap with any subnet in the network the Kubernetes cluster located in. Static routes will be set up for this CIDR blocks in node subnets."
                        type: string
                      cluster_ipv6_cidr_block:
                        description: IPv6 range for allocating pod IP addresses.
                        type: string
                      node_ipv4_cidr_mask_size:
                        description: "Size of the masks that are assigned for each node in the cluster. \n If not specified, 24 is used."
                        format: int64
                        type: integer
                      service_ipv4_cidr_block:
                        description: "CIDR block. IP range Kubernetes service Kubernetes cluster IP addresses will be allocated from. \n It should not overlap with any subnet in the network the Kubernetes cluster located in."
                        type: string
                      service_ipv6_cidr_block:
                        description: IPv6 range for allocating Kubernetes service IP addresses
                        type: string
                    type: object
                  kms_provider:
                    description: KMS provider configuration.
                    properties:
                      key_id:
                        description: KMS key ID for secrets encryption. To obtain a KMS key ID use a [yandex.cloud.kms.v1.SymmetricKeyService.List] request.
                        type: string
                    type: object
                  labels:
                    additionalProperties:
                      type: string
                    description: Resource labels as `key:value` pairs.
                    type: object
                  master_spec:
                    description: IP allocation policy of the Kubernetes cluster.
                    properties:
                      maintenance_policy:
                        description: Maintenance policy of the master.
                        properties:
                          auto_upgrade:
                            description: If set to true, automatic updates are installed in the specified period of time with no interaction from the user. If set to false, automatic upgrades are disabled.
                            type: boolean
                          maintenance_window:
                            description: Maintenance window settings. Update will start at the specified time and last no more than the specified duration. The time is set in UTC.
                            properties:
                              policy:
                                description: "Maintenance policy. \n Types that are assignable to Policy: \t*MaintenanceWindow_Anytime \t*MaintenanceWindow_DailyMaintenanceWindow \t*MaintenanceWindow_WeeklyMaintenanceWindow"
                                properties:
                                  anytime:
                                    description: Updating the master at any time.
                                    type: object
                                  daily_maintenance_window:
                                    description: Updating the master on any day during the specified time window.
                                    properties:
                                      duration:
                                        description: Window duration.
                                        properties:
                                          nanos:
                                            description: Signed fractions of a second at nanosecond resolution of the span of time. Durations less than one second are represented with a 0 `seconds` field and a positive or negative `nanos` field. For durations of one second or more, a non-zero value for the `nanos` field must be of the same sign as the `seconds` field. Must be from -999,999,999 to +999,999,999 inclusive.
                                            format: int32
                                            type: integer
                                          seconds:
                                            description: 'Signed seconds of the span of time. Must be from -315,576,000,000 to +315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years'
                                            format: int64
                                            type: integer
                                        type: object
                                      start_time:
                                        description: Window start time, in the UTC timezone.
                                        properties:
                                          hours:
                                            description: Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value "24:00:00" for scenarios like business closing time.
                                            format: int32
                                            type: integer
                                          minutes:
                                            description: Minutes of hour of day. Must be from 0 to 59.
                                            format: int32
                                            type: integer
                                          nanos:
                                            description: Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
                                            format: int32
                                            type: integer
                                          seconds:
                                            description: Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.
                                            format: int32
                                            type: integer
                                        type: object
                                    type: object
                                  weekly_maintenance_window:
                                    description: Updating the master on selected days during the specified time window.
                                    properties:
                                      days_of_week:
                                        description: Days of the week and the maintenance window for these days when automatic updates are allowed.
                                        items:
                                          properties:
                                            days:
                                              description: Days of the week when automatic updates are allowed.
                                              items:
                                                type: string
                                              type: array
                                            duration:
                                              description: Window duration.
                                              properties:
                                                nanos:
                                                  description: Signed fractions of a second at nanosecond resolution of the span of time. Durations less than one second are represented with a 0 `seconds` field and a positive or negative `nanos` field. For durations of one second or more, a non-zero value for the `nanos` field must be of the same sign as the `seconds` field. Must be from -999,999,999 to +999,999,999 inclusive.
                                                  format: int32
                                                  type: integer
                                                seconds:
                                                  description: 'Signed seconds of the span of time. Must be from -315,576,000,000 to +315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years'
                                                  format: int64
                                                  type: integer
                                              type: object
                                            start_time:
                                              description: Window start time, in the UTC timezone.
                                              properties:
                                                hours:
                                                  description: Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value "24:00:00" for scenarios like business closing time.
                                                  format: int32
                                                  type: integer
                                                minutes:
                                                  description: Minutes of hour of day. Must be from 0 to 59.
                                                  format: int32
                                                  type: integer
                                                nanos:
                                                  description: Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
                                                  format: int32
                                                  type: integer
                                                seconds:
                                                  description: Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.
                                                  format: int32
                                                  type: integer
                                              type: object
                                          type: object
                                        type: array
                                    type: object
                                type: object
                            required:
                            - policy
                            type: object
                        type: object
                      master_type:
                        description: "Types that are assignable to MasterType: \t*MasterSpec_ZonalMasterSpec \t*MasterSpec_RegionalMasterSpec"
                        properties:
                          regional_master_spec:
                            properties:
                              external_v4_address_spec:
                                description: Specify to allocate a static public IP for the master.
                                type: object
                              locations:
                                description: List of locations where the master will be allocated.
                                items:
                                  properties:
                                    internal_v4_address_spec:
                                      description: If not specified and there is a single subnet in specified zone, address in this subnet will be allocated.
                                      properties:
                                        subnet_name:
                                          description: ID of the subnet. If no ID is specified, and there only one subnet in specified zone, an address in this subnet will be allocated.
                                          type: string
                                      type: object
                                    zone_id:
                                      description: ID of the availability zone.
                                      type: string
                                  type: object
                                type: array
                              region_id:
                                description: ID of the availability zone where the master resides.
                                type: string
                            type: object
                          zonal_master_spec:
                            properties:
                              external_v4_address_spec:
                                description: Specification of parameters for external IPv4 networking.
                                type: object
                              internal_v4_address_spec:
                                description: Specification of parameters for internal IPv4 networking.
                                properties:
                                  subnet_name:
                                    description: ID of the subnet. If no ID is specified, and there only one subnet in specified zone, an address in this subnet will be allocated.
                                    type: string
                                type: object
                              zone_id:
                                description: ID of the availability zone.
                                type: string
                            type: object
                        type: object
                      security_group_ids:
                        description: Master security groups.
                        items:
                          type: string
                        type: array
                      version:
                        description: Version of Kubernetes components that runs on the master.
                        type: string
                    required:
                    - master_type
                    type: object
                  name:
                    description: Name of the instance.
                    type: string
                  network_implementation:
                    description: "Types that are assignable to NetworkImplementation: \t*CreateClusterRequest_Cilium For now there is only one implementation"
                    properties:
                      cilium:
                        properties:
                          routing_mode:
                            type: string
                        type: object
                    type: object
                  network_name:
                    description: Name of the network.
                    type: string
                  network_policy:
                    properties:
                      provider:
                        type: string
                    type: object
                  node_service_account_id:
                    description: Service account to be used by the worker nodes of the Kubernetes cluster to access Container Registry or to push node logs and metrics.
                    type: string
                  release_channel:
                    description: Release channel for the master.
                    type: string
                  service_account_id:
                    description: Service account to be used for provisioning Compute Cloud and VPC resources for Kubernetes cluster. Selected service account should have `edit` role on the folder where the Kubernetes cluster will be located and on the folder where selected network resides.
                    type: string
                  zone_id:
                    description: ID of the availability zone where the instance resides. To get a list of available zones, use the [yandex.cloud.compute.v1.ZoneService.List] request
                    type: string
                required:
                - folder_id
                - name
                type: object
              providerConfigRef:
                description: ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: An ClusterStatus represents the observed state of a Cluster.
            properties:
              atProvider:
                description: ClusterObservation are the observable fields of a Cluster.
                properties:
                  ID:
                    type: string
                  created_at:
                    type: string
                  description:
                    type: string
                  folder_id:
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    type: object
                  name:
                    type: string
                required:
                - ID
                - created_at
                - folder_id
                - name
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True, False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
